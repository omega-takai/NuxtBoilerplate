# Document: https://help.github.com/ja/actions
name: GitHub Pages Deployment - Nuxt.js

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  # prepare:
  #   runs-on: ubuntu-latest
  #   if: "! contains(github.event.head_commit.message, '[skip ci]')"
  #   steps:
  #     - run: echo "${{ github.event.head_commit.message }}"

  lint-and-test:
    # needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Yarn Versions
        run: yarn versions

      # - name: Get yarn cache
      #   id: yarn-cache
      #   run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn install
      - name: eslint
        run: yarn lint
      - name: jest
        run: yarn test

  storybook:
    runs-on: ubuntu-latest
    needs: lint-and-test
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - run: yarn install
      - run: yarn build-storybook
      - uses: actions/upload-artifact@v1
        with:
          name: Storybook
          path: .out

  deploy:
    runs-on: ubuntu-latest
    needs: lint-and-test
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - run: yarn install
      - run: yarn generate:gh-pages

      - name: deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
