# Document: https://help.github.com/ja/actions
name: GitHub Pages Deployment - Nuxt.js

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  prepare:
    runs-on: ubuntu-latest
    if: "! contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - run: echo "${{ github.event.head_commit.message }}"

  lint-and-test:
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Show Versions
        run: |
          echo "node version: $(node -v)"
          echo "npm version: $(npm -v)"
          echo "yarn version: $(yarn -v)"

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn install
      - name: eslint
        run: yarn lint
      - name: jest
        run: yarn test

#   test:
#     runs-on: ubuntu-latest
#     needs: prepare

#   lint-and-test:
#     runs-on: ubuntu-latest
#     needs: test

#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2

#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v1
#         with:
#           node-version: '12.x'

#       - name: Show Versions
#         run: |
#           echo "node version: $(node -v)"
#           echo "npm version: $(npm -v)"
#           echo "yarn version: $(yarn -v)"

#       - run: yarn install
#       - name: eslint
#         run: yarn lint
#       - name: jest
#         run: yarn test
#       - run: yarn generate:gh-pages

#       - name: deploy
#         uses: peaceiris/actions-gh-pages@v3
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           publish_dir: ./dist

# name: Node.js CI

# on:
#   push:
#     branches: [ master ]
#   pull_request:
#     branches: [ master ]

# jobs:
#   test:

#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         node-version: [10.x, 12.x]

#     steps:
#     - uses: actions/checkout@v2
#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v1
#       with:
#         node-version: ${{ matrix.node-version }}
#     - run: yarn install
#     - run: yarn lint
#     - run: yarn test
#     - run: yarn build-storybook
#     - uses: actions/upload-artifact@v1
#       with:
#         name: Storybook
#         path: .out
    # - run: npm ci
    # - run: npm run build --if-present
    # - run: npm test
      # env:
      #   CI: true
  # test-with-puppeteer:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #     - uses: actions/setup-node@v1
  #       with:
  #         node-version: 12
  #     - run: |
  #         yarn install
  #         yarn build
  #     - run: yarn test:e2e-puppeteer
